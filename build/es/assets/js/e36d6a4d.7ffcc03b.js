"use strict";(self.webpackChunkerine=self.webpackChunkerine||[]).push([[6995],{9613:(e,r,n)=>{n.d(r,{Zo:()=>m,kt:()=>y});var t=n(9496);function a(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function o(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?o(Object(n),!0).forEach((function(r){a(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,a=function(e,r){if(null==e)return{};var n,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||(a[n]=e[n]);return a}(e,r);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)n=o[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=t.createContext({}),d=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},m=function(e){var r=d(e.components);return t.createElement(c.Provider,{value:r},e.children)},l="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),l=d(n),u=a,y=l["".concat(c,".").concat(u)]||l[u]||p[u]||o;return n?t.createElement(y,i(i({ref:r},m),{},{components:n})):t.createElement(y,i({ref:r},m))}));function y(e,r){var n=arguments,a=r&&r.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=u;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[l]="string"==typeof e?e:a,i[1]=s;for(var d=2;d<o;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3869:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>s,toc:()=>d});var t=n(1163),a=(n(9496),n(9613));const o={sidebar_position:1},i="Hybrid Commands",s={unversionedId:"erine@1/commands/hybrid-commands",id:"erine@1/commands/hybrid-commands",title:"Hybrid Commands",description:"We can create hybrid commands (prefix + slash) like Discord.py using the HybridBuilder class.",source:"@site/docs/erine@1/commands/hybrid-commands.md",sourceDirName:"erine@1/commands",slug:"/erine@1/commands/hybrid-commands",permalink:"/es/docs/erine@1/commands/hybrid-commands",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Commands",permalink:"/es/docs/category/commands"},next:{title:"Hybrid Groups",permalink:"/es/docs/erine@1/commands/hybrid-groups"}},c={},d=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}],m={toc:d},l="wrapper";function p(e){let{components:r,...n}=e;return(0,a.kt)(l,(0,t.Z)({},m,n,{components:r,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"hybrid-commands"},"Hybrid Commands"),(0,a.kt)("p",null,"We can create hybrid commands (prefix + slash) like Discord.py using the HybridBuilder class."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const body = {\n    data: HybridBuilder\n    plugins?: Array<Plugins>\n    params?: ParamsBuilder\n    code: AsyncFunction\n}\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { HybridBuilder, ParamsBuilder } = require(\"erine\");\n\nconst body = {\n    data: new HybridBuilder()\n      .setName('ping')\n      .setAliases('pong')\n      .setDescription('This works with ![ping|pong] and /ping'),\n    params: new ParamsBuilder()\n      .addMember({ name: 'mymember', description: 'The member', required: true }),\n    async code(context) {\n        await context.send({ content: `Pong! ${context.author.username}`, ephemeral: true })\n    }\n}\n\nmodule.exports = { body } // Important to be named \"body\".\n")))}p.isMDXComponent=!0}}]);