"use strict";(self.webpackChunkerine=self.webpackChunkerine||[]).push([[5653],{9613:(e,n,t)=>{t.d(n,{Zo:()=>l,kt:()=>f});var r=t(9496);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)t=a[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var i=r.createContext({}),m=function(e){var n=r.useContext(i),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},l=function(e){var n=m(e.components);return r.createElement(i.Provider,{value:n},e.children)},d="mdxType",p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,a=e.originalType,i=e.parentName,l=c(e,["components","mdxType","originalType","parentName"]),d=m(t),u=o,f=d["".concat(i,".").concat(u)]||d[u]||p[u]||a;return t?r.createElement(f,s(s({ref:n},l),{},{components:t})):r.createElement(f,s({ref:n},l))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var a=t.length,s=new Array(a);s[0]=u;var c={};for(var i in n)hasOwnProperty.call(n,i)&&(c[i]=n[i]);c.originalType=e,c[d]="string"==typeof e?e:o,s[1]=c;for(var m=2;m<a;m++)s[m]=t[m];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},2255:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>i,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>m});var r=t(1163),o=(t(9496),t(9613));const a={sidebar_position:4},s="Slash Commands",c={unversionedId:"erine@1/commands/slash-commands",id:"erine@1/commands/slash-commands",title:"Slash Commands",description:"We can use the SlashCommandBuilder class from Discord.js",source:"@site/docs/erine@1/commands/slash-commands.md",sourceDirName:"erine@1/commands",slug:"/erine@1/commands/slash-commands",permalink:"/docs/erine@1/commands/slash-commands",draft:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Prefix Commands",permalink:"/docs/erine@1/commands/prefix-commands"},next:{title:"Error handling",permalink:"/docs/category/error-handling"}},i={},m=[{value:"Example",id:"example",level:2},{value:"Subcommands",id:"subcommands",level:2}],l={toc:m},d="wrapper";function p(e){let{components:n,...t}=e;return(0,o.kt)(d,(0,r.Z)({},l,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"slash-commands"},"Slash Commands"),(0,o.kt)("p",null,"We can use the SlashCommandBuilder class from Discord.js"),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { SlashCommandBuilder } = require('discord.js');\n\nconst body = {\n    data: new SlashCommandBuilder()\n        .setName('ping')\n        .setDescription('Replies with pong!'),\n    async code(interaction) {\n        interaction.send(`Pong! <@${interaction.author.id}>`);\n    }\n}\n\nmodule.exports = { body } // Important to be named \"body\".\n")),(0,o.kt)("h2",{id:"subcommands"},"Subcommands"),(0,o.kt)("p",null,"You can use subcommands doing the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { SlashCommandBuilder } = require('discord.js');\n\nconst body = {\n    data: new SlashCommandBuilder()\n        .setName('bot')\n        .setDescription('Bot information.')\n        .addSubcommand(subcommand => \n            subcommand\n                .setName('ping')\n                .setDescription('Returns the client websocket ping.')\n        ),\n    async code(context) {\n        const subcommand = context.data.options._subcommand;\n        if (subcommand === 'ping') {\n            await context.send(`Latency: ${context.bot.ws.ping} ms`);\n        }\n    }\n}\n\nmodule.exports = { body }\n")))}p.isMDXComponent=!0}}]);