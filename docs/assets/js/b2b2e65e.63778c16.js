"use strict";(self.webpackChunkerine=self.webpackChunkerine||[]).push([[567],{9613:(e,r,n)=>{n.d(r,{Zo:()=>p,kt:()=>y});var t=n(9496);function o(e,r,n){return r in e?Object.defineProperty(e,r,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[r]=n,e}function a(e,r){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);r&&(t=t.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),n.push.apply(n,t)}return n}function i(e){for(var r=1;r<arguments.length;r++){var n=null!=arguments[r]?arguments[r]:{};r%2?a(Object(n),!0).forEach((function(r){o(e,r,n[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(n,r))}))}return e}function s(e,r){if(null==e)return{};var n,t,o=function(e,r){if(null==e)return{};var n,t,o={},a=Object.keys(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||(o[n]=e[n]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(t=0;t<a.length;t++)n=a[t],r.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=t.createContext({}),d=function(e){var r=t.useContext(c),n=r;return e&&(n="function"==typeof e?e(r):i(i({},r),e)),n},p=function(e){var r=d(e.components);return t.createElement(c.Provider,{value:r},e.children)},m="mdxType",l={inlineCode:"code",wrapper:function(e){var r=e.children;return t.createElement(t.Fragment,{},r)}},u=t.forwardRef((function(e,r){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),m=d(n),u=o,y=m["".concat(c,".").concat(u)]||m[u]||l[u]||a;return n?t.createElement(y,i(i({ref:r},p),{},{components:n})):t.createElement(y,i({ref:r},p))}));function y(e,r){var n=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=u;var s={};for(var c in r)hasOwnProperty.call(r,c)&&(s[c]=r[c]);s.originalType=e,s[m]="string"==typeof e?e:o,i[1]=s;for(var d=2;d<a;d++)i[d]=n[d];return t.createElement.apply(null,i)}return t.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2849:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>i,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>d});var t=n(1163),o=(n(9496),n(9613));const a={sidebar_position:2},i="Hybrid Groups",s={unversionedId:"erine@1/commands/hybrid-groups",id:"erine@1/commands/hybrid-groups",title:"Hybrid Groups",description:"We can create hybrid command groups (prefix + slash) like Discord.py using the HybridGroup class.",source:"@site/docs/erine@1/commands/hybrid-groups.md",sourceDirName:"erine@1/commands",slug:"/erine@1/commands/hybrid-groups",permalink:"/docs/erine@1/commands/hybrid-groups",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Hybrid Commands",permalink:"/docs/erine@1/commands/hybrid-commands"},next:{title:"Prefix Commands",permalink:"/docs/erine@1/commands/prefix-commands"}},c={},d=[{value:"Usage",id:"usage",level:2},{value:"Example",id:"example",level:2}],p={toc:d},m="wrapper";function l(e){let{components:r,...n}=e;return(0,o.kt)(m,(0,t.Z)({},p,n,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"hybrid-groups"},"Hybrid Groups"),(0,o.kt)("p",null,"We can create hybrid command groups (prefix + slash) like Discord.py using the HybridGroup class."),(0,o.kt)("h2",{id:"usage"},"Usage"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const body = {\n    data: HybridBuilder\n}\n")),(0,o.kt)("h2",{id:"example"},"Example"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-javascript"},"const { HybridBuilder, HybridGroup } = require(\"erine\");\n\nconst body = {\n    data: new HybridGroup()\n        .setName('parent')\n        .setDescription('A pack of subcommands.')\n        .addCommand({\n            data: new HybridBuilder()\n                .setName('child-one')\n                .setDescription(\"I'm the first command of this group.\"),\n            async code(context) {\n                await context.send(`My parent is ${context.parent.name}.`)\n            }\n        })\n        .addCommand({\n            data: new HybridBuilder()\n                .setName('child-two')\n                .setDescription(\"I'm the second command of this group.\"),\n            async code(context) {\n                await context.send(`My parent is ${context.parent.name}.`)\n            }\n        })\n        // Every .addCommand(...) represents a subcommand.\n}\n\nmodule.exports = { body } // Important to be named \"body\".\n")))}l.isMDXComponent=!0}}]);