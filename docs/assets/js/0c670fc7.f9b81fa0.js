"use strict";(self.webpackChunkerine=self.webpackChunkerine||[]).push([[5053],{9613:(e,n,t)=>{t.d(n,{Zo:()=>u,kt:()=>g});var r=t(9496);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),c=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=c(e.components);return r.createElement(s.Provider,{value:n},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),p=c(t),m=a,g=p["".concat(s,".").concat(m)]||p[m]||d[m]||o;return t?r.createElement(g,i(i({ref:n},u),{},{components:t})):r.createElement(g,i({ref:n},u))}));function g(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var c=2;c<o;c++)i[c]=t[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},6275:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>c});var r=t(1163),a=(t(9496),t(9613));const o={sidebar_position:1},i="Custom Plugins",l={unversionedId:"erine@latest/tips/custom_plugins",id:"erine@latest/tips/custom_plugins",title:"Custom Plugins",description:"Erine has built-in plugins to save some work when creating commands, also, you can create your own plugins.",source:"@site/docs/erine@latest/tips/custom_plugins.md",sourceDirName:"erine@latest/tips",slug:"/erine@latest/tips/custom_plugins",permalink:"/erine-docs/docs/erine@latest/tips/custom_plugins",draft:!1,tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Tips",permalink:"/erine-docs/docs/category/tips-1"},next:{title:"Cooldown",permalink:"/erine-docs/docs/erine@latest/tips/cooldown"}},s={},c=[{value:"What you will need?",id:"what-you-will-need",level:2},{value:"Creating the error class",id:"creating-the-error-class",level:2},{value:"Creating the plugin",id:"creating-the-plugin",level:2},{value:"Using your plugins in commands",id:"using-your-plugins-in-commands",level:2},{value:"Handling the error",id:"handling-the-error",level:2}],u={toc:c},p="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(p,(0,r.Z)({},u,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"custom-plugins"},"Custom Plugins"),(0,a.kt)("p",null,"Erine has built-in plugins to save some work when creating commands, also, you can create your own plugins."),(0,a.kt)("h2",{id:"what-you-will-need"},"What you will need?"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Create the class. (to emit the error instance)"),(0,a.kt)("li",{parentName:"ul"},"The plugin itself.")),(0,a.kt)("h2",{id:"creating-the-error-class"},"Creating the error class"),(0,a.kt)("p",null,"Error classes are used to cast an instance of that class and be able to handle errors with using conditions."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"// We are going to create a plugin to allow only messages to be sent in a specific channel.\nclass NotInMainChat {\n    // Basically this will be the data emitted in the error.\n    constructor (ctx, channel) {\n        this.ctx = ctx\n        this.channel = channel\n    }\n}\n\nmodule.exports = { NotInMainChat }\n")),(0,a.kt)("h2",{id:"creating-the-plugin"},"Creating the plugin"),(0,a.kt)("p",null,"If the condition is not met, we emit the contextError event and pass it a new instance of the previously created class as a parameter."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const CustomPlugins = {\n    async onlyInMainChat(ctx) {\n        if(ctx.channel?.id !== 'my awesome channel ID') {\n            ctx.bot.emit('contextError', new NotInMainChat(ctx, ctx.channel));\n            return false\n        } else return true\n    }\n}\n\nmodule.exports = { CustomPlugins }\n")),(0,a.kt)("h2",{id:"using-your-plugins-in-commands"},"Using your plugins in commands"),(0,a.kt)("p",null,"You just need to request your custom plugin like you normally would with plugins."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const { CustomPlugins } = require(path_to_file);\n\nmodule.exports["data"] = {\n    data: new CommandBuilder()\n        .setNames(\'hi\')\n        .allowSlash(false)\n        .allowPrefix(true),\n    plugins: [CustomPlugins.onlyInMainChat],\n    async code(context) {\n        await context.send("Hello, I\'m a bot.");\n    }\n}\n')),(0,a.kt)("h2",{id:"handling-the-error"},"Handling the error"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},"const { NotInMainChat } = require(path_to_file); // Don't forget to require the error class if you have it located in different files.\n// More logic here...\nclient.on('contextError', async (error) => {\n    if (error instanceof NotInMainChat) {\n        err.ctx.send('You can just send messages in main chat.');\n    }\n});\n")))}d.isMDXComponent=!0}}]);