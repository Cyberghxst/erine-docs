"use strict";(self.webpackChunkerine=self.webpackChunkerine||[]).push([[9185],{9613:(e,n,r)=>{r.d(n,{Zo:()=>d,kt:()=>f});var t=r(9496);function a(e,n,r){return n in e?Object.defineProperty(e,n,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[n]=r,e}function o(e,n){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var t=Object.getOwnPropertySymbols(e);n&&(t=t.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),r.push.apply(r,t)}return r}function i(e){for(var n=1;n<arguments.length;n++){var r=null!=arguments[n]?arguments[n]:{};n%2?o(Object(r),!0).forEach((function(n){a(e,n,r[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(r,n))}))}return e}function s(e,n){if(null==e)return{};var r,t,a=function(e,n){if(null==e)return{};var r,t,a={},o=Object.keys(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||(a[r]=e[r]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(t=0;t<o.length;t++)r=o[t],n.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=t.createContext({}),c=function(e){var n=t.useContext(l),r=n;return e&&(r="function"==typeof e?e(n):i(i({},n),e)),r},d=function(e){var n=c(e.components);return t.createElement(l.Provider,{value:n},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var n=e.children;return t.createElement(t.Fragment,{},n)}},m=t.forwardRef((function(e,n){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),p=c(r),m=a,f=p["".concat(l,".").concat(m)]||p[m]||u[m]||o;return r?t.createElement(f,i(i({ref:n},d),{},{components:r})):t.createElement(f,i({ref:n},d))}));function f(e,n){var r=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=m;var s={};for(var l in n)hasOwnProperty.call(n,l)&&(s[l]=n[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return t.createElement.apply(null,i)}return t.createElement.apply(null,r)}m.displayName="MDXCreateElement"},2716:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var t=r(1163),a=(r(9496),r(9613));const o={sidebar_position:2},i="Group Builder",s={unversionedId:"erine@latest/commands/group_builder",id:"erine@latest/commands/group_builder",title:"Group Builder",description:"GroupBuilder is the class for creating groups of commands.",source:"@site/docs/erine@latest/commands/group_builder.md",sourceDirName:"erine@latest/commands",slug:"/erine@latest/commands/group_builder",permalink:"/docs/erine@latest/commands/group_builder",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Command Builder",permalink:"/docs/erine@latest/commands/command_builder"},next:{title:"Events",permalink:"/docs/category/events"}},l={},c=[{value:"Example",id:"example",level:2}],d={toc:c},p="wrapper";function u(e){let{components:n,...r}=e;return(0,a.kt)(p,(0,t.Z)({},d,r,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"group-builder"},"Group Builder"),(0,a.kt)("p",null,"GroupBuilder is the class for creating groups of commands."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-typescript"},"// Command builder constructor options.\ntype GroupBuilderOptions = {\n    name: string\n    aliases: string[];\n    description: string;\n    as_slash: boolean;\n    as_prefix: boolean;\n}\n\n// Command options\ninterface FileModule {\n    data: CommandBuilder | GroupBuilder | InteractionBuilder | EventBuilder,\n    params?: ParamsBuilder,\n    plugins?: typeof ErinePlugins[],\n    code?: (...args: any) => void\n}\n")),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-javascript"},'const { CommandBuilder, FileModule, GroupBuilder } = require("erine");\n\n/** @type {FileModule} */\nconst data = {\n    data: new GroupBuilder({\n        name: "parent",\n        description: "A packof subcommands.",\n        as_prefix: false,\n        as_slash: true\n    })\n    .addCommand({\n        data: new CommandBuilder({\n            name: "child-one",\n            description: "I\'m the first command of this group."\n        }),\n        async code(context) {\n            await context.send(`My parent is ${context.parent.name}.`)\n        }\n    })\n    .addCommand({\n        data: new CommandBuilder({\n            name: "child-two",\n            description: "I\'m the second command of this group."\n        }),\n        async code(context) {\n            await context.send(`My parent is ${context.parent.name}.`)\n        }\n    })\n    // Every .addCommand(...) represents a subcommand.\n}\n\nmodule.exports = { data } // Important to be named "data".\n')))}u.isMDXComponent=!0}}]);